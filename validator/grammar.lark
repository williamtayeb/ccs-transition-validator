start: declaration | expression
declaration: identifier _ASSIGN expression

expression: process_expression relabelling? restriction?
process_expression: ("(" process_expression_element ")") | process_expression_element 
process_expression_element: identifier | action_prefix | sum | parallel_composition | transition

identifier: CONSTANT | PROCESS_NAME

action_prefix: action "." expression 
action: input_action | output_action 
input_action: LABEL 
output_action: "&" LABEL 

sum: expression "+" identifier 
parallel_composition: expression "|" expression 

relabelling: "[" relabelling_list "]" 
relabelling_list: relabel ("," relabel)* 
relabel: LABEL "/" LABEL 

restriction: "\{" action_list "}" 
action_list: action ("," action)* 

transition: expression "->(" transition_action ")" expression 
transition_action: action | TAU

// Tokens
CONSTANT: /[A-Z][a-zA-Z]*/ 
PROCESS_NAME: CONSTANT /(:[0-9]+)?/
LABEL: /[a-z]+/ 
TAU: /\*/ // the star character is a reserved action which refers to tau

// The underscore will remove the assign operator
// from the parse tree.
_ASSIGN: "::="

%import common.WS
%ignore WS